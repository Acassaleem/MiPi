print "--- Stage 4: Global Data Tests ---";

// Original brief examples:
var global_message = "Initial global message for shadowing test";
var quickMaths = 10;
quickMaths = quickMaths + 2;
print quickMaths; // Expected: 12

var floatTest = 1.0;
floatTest = floatTest + 5;
print floatTest; // Expected: 6.0

var stringCatTest = "10 corgis";
// Original example adjusted to demonstrate string concatenation with numbers without error.
stringCatTest = stringCatTest + " and " + 5 + " more corgis";
print stringCatTest; // Expected: 10 corgis and 5 more corgis

// Global variable creation and basic usage with various types:
var num_var = 10;
var bool_var = false;
var text_var = "MyText";
var list_var = [1, 2];
print "num_var: " + num_var;     // Expected: num_var: 10
print "bool_var: " + bool_var;   // Expected: bool_var: false
print "text_var: " + text_var;   // Expected: text_var: MyText
print "list_var: " + list_var;   // Expected: list_var: [1, 2]

// Global variable assignment and accumulation:
num_var = num_var + 5;           // num_var becomes 15
bool_var = !bool_var;            // bool_var becomes true
text_var = text_var + " Updated"; // text_var becomes "MyText Updated"
list_var = list_var + [3, 4];    // list_var becomes [1, 2, 3, 4]

print "num_var (updated): " + num_var;   // Expected: num_var (updated): 15
print "bool_var (updated): " + bool_var; // Expected: bool_var (updated): true
print "text_var (updated): " + text_var; // Expected: text_var (updated): MyText Updated
print "list_var (updated): " + list_var; // Expected: list_var (updated): [1, 2, 3, 4]

// Global variable interaction with other operations:
print num_var > 10 and bool_var;  // Expected: true (15 > 10 is true, and bool_var is true)
print text_var == "MyText Updated"; // Expected: true
print list_var[0] + list_var[1]; // Expected: 3

// Test uninitialized global variable (should be nil):
var uninit_var;
print "Uninitialized var: " + uninit_var; // Expected: Uninitialized var: nil

// Local variable shadowing global:
var x = 100;
print "Global x before block: " + x; // Expected: Global x before block: 100
{
    var x = 200; // Local x shadows global x
    print "Local x inside block: " + x; // Expected: Local x inside block: 200
    global_message = "Global updated from inside block"; // Modify global from local scope
}

print "Global x after block: " + x; // Expected: Global x after block: 100 (global x unaffected)
print "Global message after block: " + global_message; // Expected: Global message after block: Global updated from inside block

// Error test for invalid type conversion (original brief example):
// var errorTest = 5;
// errorTest = errorTest + "insert string here"; // This line will cause a Runtime Error
// print errorTest; // This line might not execute if interpreter stops on error

print "--- End Stage 4 Tests ---";